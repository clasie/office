<?php

/**
 * error
 */
error_reporting(E_ALL); ini_set("display_errors", 1);
define('ERROR_PATH', realpath(__DIR__.'/../app/layout/error/').DIRECTORY_SEPARATOR);
/**
 * layout
 */
define('LAYOUT_DEFAULT_PATH', realpath(__DIR__.'/../app/layout/default/').DIRECTORY_SEPARATOR);
define('LAYOUT_PATH', realpath(__DIR__.'/../app/layout/').DIRECTORY_SEPARATOR);
/**
 * public
 */
define('PUBLIC_PATH', realpath(__DIR__.'/../public/').DIRECTORY_SEPARATOR);
/**
 * server
 */
define( 'SERVER_NAME', "//" . $_SERVER["SERVER_NAME"] ); //test

/*********************************************************************
 * extract the params
 ********************************************************************/

//directory containing the called script
$uri = rtrim( dirname($_SERVER["SCRIPT_NAME"]), '/' );
//echo "<br/>directory containing the called script: " . $uri . "<br/>";
//var_dump($_SERVER["SCRIPT_NAME"]);

//build href for public stuffs
$href_public = SERVER_NAME . $uri;
//echo "<br/>href:  " . $href_public. "<br/>";

//all url  data (params) following the containing directory
$uri = '/' . trim( str_replace( $uri, '', $_SERVER['REQUEST_URI'] ), '/' );
//echo "<br/>all url  data following the containing directory: " . $uri. "<br/>";
//var_dump($_SERVER["REQUEST_URI"]);

//translate special url chars in orde to be usable by php script
$uri = urldecode( $uri );
//echo "<br/>translate special url chars in orde to be usable by php script: " . $uri. "<br/>";

//echo "URI: " . $uri . "<br/>";
//echo "<pre>";
$tmp = preg_split("|/|",$uri);
//var_dump($tmp);
$module = (isset($tmp[1])    && strlen($tmp[1])>0)?$tmp[1]:"_NO_MODULE_";
$controller = (isset($tmp[2])&& strlen($tmp[2])>0)?$tmp[2]:"_NO_CONTROLLER_";
$action = (isset($tmp[3])    && strlen($tmp[3])>0)?$tmp[3]:"_NO_ACTION_";

/*********************************************************************
 * build result
 ********************************************************************/

class Mvc {
   public $module="";
   public $controller="";
   public $action="";
   public $params = array();
   public function toString(){
        echo '<pre>';
        echo $this->module . '<br/>';
	echo $this->controller . '<br/>';
	echo $this->action . '<br/>';
	var_dump($this->params) . '<br/>';
        echo '</pre>';
   }
}

$mvc = new Mvc();

$mvc->module=$module;
$mvc->controller=$controller;
$mvc->action=$action;
$mvc->params=array();

//echo $mvc->toString();

/*********************************************************************
 * test against authorized values
 ********************************************************************/

/**
 * authorized modules
 */
$array_modules = array (//todo: dynamic
   "storage"
);
/**
 * authorized controllers
 */
$array_controllers = array (//todo: dynamic
   "show"
);
/**
 * authorized actions
 */
$array_actions = array (//todo: dynamic
   "resp",
   "all"
);
$partOfMvcBotFound = FALSE;
/**
 * module found
 */
if (in_array($mvc->module, $array_modules)) {
	/**
	 * controller found
	 */
	if (in_array($mvc->controller, $array_controllers)) {
		/**
		 * action found
		 */
		if (in_array($mvc->action, $array_actions)) {
		    /*include( 
			LAYOUT_PATH . 
			$mvc->module .  '/'. 
                        $mvc->controller .  '/'. 
			$mvc->action . '/index.php' );   */
                    include( LAYOUT_PATH . $module  . '/index.php' );                
		}else{
                   $partOfMvcBotFound = TRUE;
                }
       }else{
          $partOfMvcBotFound = TRUE;
       }
}else{
    $partOfMvcBotFound = TRUE;
}

/**
 * default page asked OR something NOT found
 */
if($partOfMvcBotFound){
    /**
     * wrong part(s) detected
     */
    if($mvc->module != "_NO_MODULE_" ||
       $mvc->controller != "_NO_CONTROLLER_" ||
       $mvc->action != "_NO_ACTION_"
    )
    {
       include( realpath(ERROR_PATH . '404.php' ));
    /**
     * default page
     */
    }else{
       include( LAYOUT_PATH . "default"  . '/index.php' );
    }
}
